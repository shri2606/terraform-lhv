name: Terraform CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  terraform-dev:
    name: 'Terraform Development'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./development

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: 'us-east-1'  # Change this to your preferred region

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.8.4  # Specify your preferred Terraform version

    - name: Terraform Init
      run: terraform init

    #- name: Terraform Format
     # run: terraform fmt -check

    - name: Terraform Validate
      run: terraform validate

    - name: Terraform Plan
      run: terraform plan -no-color
      
   
    # - name: Terraform Apply
    #   if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    #   run: terraform apply -auto-approve

  terraform-prod:
    name: 'Terraform Production'
    runs-on: ubuntu-latest
    needs: terraform-dev  # This ensures prod runs after dev
    defaults:
      run:
        working-directory: ./production

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.8.4  

    - name: Terraform Init
      run: terraform init

    - name: Terraform Format
      run: terraform fmt -check

    - name: Terraform Validate
      run: terraform validate

    - name: Terraform Plan
      run: terraform plan -no-color

    # - name: Terraform Apply
    #   if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    #   environment: production
    #   run: terraform apply -auto-approve
